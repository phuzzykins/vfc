################################################################################
####
#### GCODE macros
####
################################################################################

[pause_resume]

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT
	END_PRINT

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x/2 %}
    {% set y_park = 50 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{E} F2100
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  
[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### end of definitions #####
    G91
    G1 E{E} F2100
    RESTORE_GCODE_STATE NAME=PAUSE_state
    BASE_RESUME

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BASE_BED_MESH_CALIBRATE
gcode:
	_SET_STATUS_WORKING
	M117 Calibrating...
	G28
    BASE_BED_MESH_CALIBRATE
	GO_TO_NEUTRAL_POSITION
	M117 Calibration Done
	SAVE_CONFIG

[gcode_macro GO_TO_NEUTRAL_POSITION]
gcode:
	HOME
	G0 X{printer.toolhead.axis_maximum.x/2} Y50 Z50 F3600
	
[gcode_macro GO_TO_CENTER_OF_PRINT_VOLUME]
gcode:
	HOME
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/2}
	
[delayed_gcode tune_motors_helper]
gcode:
	_SET_STATUS_ATTENTION
	_SUPPRESS_STALL_DETECTION
	SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=0
	SET_STEPPER_ENABLE STEPPER=stepper_z ENABLE=0
	M117 RESET WHEN DONE
	
[gcode_macro TUNE_MOTORS]
gcode:
	_SET_STATUS_WORKING
	GO_TO_CENTER_OF_PRINT_VOLUME
	UPDATE_DELAYED_GCODE ID=tune_motors_helper DURATION=1
	
[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(0)|float %}
    {% set T0_TEMP = params.T0_TEMP|default(0)|float %}
	_SET_STATUS_WORKING
	LIGHTS_ON
	
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}
	
	{% if T0_TEMP >= 160 %}
		SET_HEATER_TEMPERATURE HEATER=extruder TARGET=160
	{% endif %}
	
	GO_TO_NEUTRAL_POSITION

	{% if BED_TEMP > 0 %}
		TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED_TEMP - 5} MAXIMUM={BED_TEMP +1 }
	{% endif %}
	
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={T0_TEMP}
	
	{% if BED_TEMP > 0 %}
		TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED_TEMP} MAXIMUM={BED_TEMP + 1}
	{% endif %}
	
	{% if T0_TEMP > 0 %}
		TEMPERATURE_WAIT SENSOR=extruder MINIMUM={T0_TEMP} MAXIMUM={T0_TEMP + 1}
	{% endif %}
	
	{% if T0_TEMP > 0 %}
		G1 X10 Y{printer.toolhead.axis_minimum.y/2} F3600.0	# prepare to prime
		G1 Z0.40	        								# prepare to prime
		G92 E0 												# reset extrusion distance
		G1 X80.0 E20 F900.0 								# priming
		G1 X150.0 E30 F900.0 								# priming
		G92 E0 												# reset extrusion distance
	{% endif %}
	

[gcode_macro END_PRINT]
gcode:
	TURN_OFF_HEATERS
	SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
	M107
	G0 X{printer.toolhead.axis_maximum.x/2} Y50 Z300 F3600
	_CLEAR_STATUS
	
[delayed_gcode end_buzz]
gcode:
	#SET_PIN PIN=_buzzer VALUE=0
	
[gcode_macro _BUZZ]
gcode:
	{% set S = params.S|default(1)|float %}
	#SET_PIN PIN=_buzzer VALUE=500
	#UPDATE_DELAYED_GCODE ID=end_buzz DURATION={S}
	
[gcode_macro _SET_STATUS_WORKING]
gcode:
    #SET_PIN PIN=_blue_led VALUE=1
	#SET_PIN PIN=_red_led VALUE=0

[gcode_macro _SET_STATUS_ATTENTION]	
gcode:
    #SET_PIN PIN=_blue_led VALUE=0
	#SET_PIN PIN=_red_led VALUE=1
	
[gcode_macro _CLEAR_STATUS]	
gcode:
    #SET_PIN PIN=_blue_led VALUE=0
	#SET_PIN PIN=_red_led VALUE=0
	
[gcode_macro BOUNDS_CHECK]
gcode:
	HOME
	G1 Z5
	G1 X{printer.toolhead.axis_minimum.x/2} Y{printer.toolhead.axis_minimum.y} F3600
	G1 X{printer.toolhead.axis_maximum.x}
	G1 Y{printer.toolhead.axis_maximum.y}
	G1 X{printer.toolhead.axis_minimum.x/2}
	G1 Y{printer.toolhead.axis_minimum.y/2}
	G1 Z{printer.toolhead.axis_maximum.z - 2}
	G1 X{printer.toolhead.axis_maximum.x}
	G1 Y{printer.toolhead.axis_maximum.y}
	G1 X{printer.toolhead.axis_minimum.x/2}
	G1 Y{printer.toolhead.axis_minimum.y/2}
	G1 Z0.5
	
[gcode_macro FORCE_HOME]
gcode:
	_SET_STATUS_WORKING
	G28
	GO_TO_NEUTRAL_POSITION
	_CLEAR_STATUS
	
[gcode_macro HOME]
gcode:
	{% if not "xyz" in printer.toolhead.homed_axes %}
		G28
	{% endif %}
	

[gcode_macro _DUMP_STATE]
gcode:
   {% for name1 in printer %}
      {% for name2 in printer[name1] %}
         { action_respond_info("printer['%s'].%s = %s"
                               % (name1, name2, printer[name1][name2])) }
      {% else %}
         { action_respond_info("printer['%s'] = %s" % (name1, printer[name1])) }
      {% endfor %}
   {% endfor %}
	
#####
##### These macros decide what action to take when the HLFB triggers
#####
[gcode_macro _SUPPRESS_STALL_DETECTION]
gcode:
	SET_GCODE_VARIABLE MACRO=_MOTOR_STALLED VARIABLE=suppress VALUE=1
	
[gcode_macro _ENABLE_STALL_DETECTION]
gcode:
	UPDATE_DELAYED_GCODE ID=_clear_suppress DURATION=0.1
	
[delayed_gcode _clear_suppress]
gcode:
	SET_GCODE_VARIABLE MACRO=_MOTOR_STALLED VARIABLE=suppress VALUE=0
	
[delayed_gcode _clear_throttle]
gcode:
	SET_GCODE_VARIABLE MACRO=_MOTOR_STALLED VARIABLE=throttle VALUE=0

[gcode_macro _MOTOR_STALLED]
variable_suppress: 1
variable_throttle: 0
gcode:
	{% set AXIS = params.AXIS|default("UNKNOWN") %}
	{% if not suppress %}
		{% if not throttle %}
			M117 SHUTDOWN:{AXIS} STALL
			_SET_STATUS_ATTENTION
			_BUZZ S=5
			{action_respond_info('The %s axis motor has stalled!' %( AXIS))}
			{action_emergency_stop('The %s axis motor has stalled!' %( AXIS))}
			SET_GCODE_VARIABLE MACRO=_MOTOR_STALLED VARIABLE=throttle VALUE=1
			UPDATE_DELAYED_GCODE ID=_clear_throttle DURATION=5
		{% endif %}
	{% endif %}

	

